name: Deployment Exercise 1
on: push

jobs:
  test:
    environment: node_project
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependency
        run: npm ci
      - name: Exibe variavel de ambiente
        run: | 
         echo " Valor da variavel: ${{ vars.MONGODB_CLUSTER_ADDRESS }} "

#      - name: Lint
#        run: |
#         npm init @eslint/config
#         npm run lint
#      - name: Test code
#        run: npm run test

  build:
   environment: node_project
   needs: test
   runs-on: ubuntu-latest
   outputs:
     script-file: ${{ steps.publish.outputs.script-file }}
   steps:
    - name: Get Code
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      run: npm ci
#    - name: Build website
#      run: npm run build
    - name: Public JS filename
      id: publish
      run: find dist/*.js -type f -execdir echo 'script_file={}' >>  $GITHUB_OUTPUT ';'
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-files
        path: | 
          dist
          package.json
    - name: Exibe variavel de ambiente
      run: |
        echo "MONGODB_ADDRESS: ${{ env.MONGODB_CLUSTER_ADDRESS }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output file name
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."